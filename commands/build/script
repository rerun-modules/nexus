#!/usr/bin/env bash
#
#/ command: nexus:build: "build and package the Nexus distribution"
#
#/ usage: rerun nexus:build [options]
#
#/ rerun env variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option variables: 

# Read module function library.
. $RERUN_MODULE_DIR/lib/functions.sh || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Parse the command options.
[[ -r $RERUN_MODULE_DIR/commands/build/options.sh ]] && {
    . $RERUN_MODULE_DIR/commands/build/options.sh || rerun_die "Failed loading options parser."
    rerun_options_parse "$@"
}


# Error handling
# ---------------
# * Trap calls `rerun_die` with standard message.
# * Exit upon command errors or accessing unset variables.
#   * See [set](http://ss64.com/bash/set.html)
trap 'rerun_die "*** command failed: nexus:build. ***"' ERR
set -o nounset -o pipefail


# ------------------------------
# Your implementation goes here.
# ------------------------------

buildrpm() {
  if [[ ! -e $DIRECTORY/SOURCES/jboss-as-${VERSION}.zip ]]
  then
    # Download the specified version from the downloads site:
    # e.g. http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip

    mkdir -p $DIRECTORY/SOURCES

    #
    # wget, who needs it?
    #
    if [ ! -r $DIRECTORY/SOURCES/nexus-${VERSION}.zip ]
    then
       curl -k -f -o $DIRECTORY/SOURCES/nexus-${VERSION}.zip  ${URL}/nexus-${VERSION}-bundle.zip || rerun_die "Unable to download artifact: ${URL}/nexus-${VERSION}-bundle.zip"
    fi
  fi


   rerun rpm:build -n nexus -v $VERSION -r $RELEASE -t $DIRECTORY
}

case $FORMAT in
  rpm)
    buildrpm
    ;;
  *)
    rerun_die "invalid package format \"$FORMAT\""
    ;;
esac

exit $?

# Done
